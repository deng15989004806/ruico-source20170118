@using PagedList.Mvc
@using Ruico.WebHost
@model PagedList.IPagedList<Ruico.Dto.Hr.MemberDTO>
    @{
        ViewBag.Title = "员工管理";
        var name = ViewBag.Name;
    }

    <div id="content-header">
        <h1>员工管理</h1>
    </div>
    <div id="breadcrumb">
        <a href="@Url.Action("Index", "Home", new { area = "" }, null)" title="返回首页" class="tip-bottom"><i class="icon-home"></i> 首页</a>
        <a href="@Url.Action("Index")">员工管理</a>

    </div>
<div class="container-fluid">

    <div class="row-fluid">
        <div class="span12">
            @using (Ajax.BeginForm("SearchMember", null, new AjaxOptions {HttpMethod = "Post", OnSuccess = "ajaxRequestSuccess"}, new {@class = "form-inline"}))
            {
                <section>
                    <input type="text" name="name" id="name" class="input-medium" placeholder="员工名称" value="@name">
                    <button type="submit" class="btn btn-primary">查询</button>&nbsp; &nbsp;
                    <a href="@Url.Action("EditMember")" class="btn btn-success" id="addnew">新增员工</a>
                    <a href="@Url.Action("InviteMember")" class="btn btn-success">邀请员工</a>
                </section>
            }
            <div class="widget-box">
                <div class="widget-content nopadding">
                    <table class="table table-bordered table-striped">
                        <thead>
                        <tr>
                            <th>员工编号</th>
                            <th>员工名称</th>
                            <th>微信号</th>
                            <th>职位</th>
                            <th>邮箱</th>
                            <th>性别</th>
                            <th>状态</th>
                            <th>部门</th>
                            <th>创建日期</th>
                            <th>操作</th>
                            <th>操作日志</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model)
                        {
                            // 1=已关注，2=已冻结，4=未关注
                            var statusText = string.Empty;
                            switch (item.Status)
                            {
                                case 1:
                                    statusText = "已关注";
                                    break;
                                case 2:
                                    statusText = "已冻结";
                                    break;
                                case 4:
                                    statusText = "未关注";
                                    break;
                            }
                            var departmentText = string.Join(",", item.Departments.Select(x => x.Name));
                            <tr>
                                <td>@item.Userid</td>
                                <td>@item.Name</td>
                                <td>@item.WeixinId</td>
                                <td>@item.Position</td>
                                <td>@item.Email</td>
                                <td>@Html.Raw(item.Gender == 1 ? "男" : (item.Gender == 2 ? "女" : "未定义"))</td>
                                <td>@statusText</td>
                                <td>@departmentText</td>
                                <td>@item.Created.Display()</td>
                                <td>
                                    <a href="@Url.Action("EditDepartmentList", new { memberId = @item.Id })"><i class="icon-list"></i>部门</a>
                                    <a href="@Url.Action("EditMember", new {id = @item.Id})"><i class="icon-edit"></i>编辑</a>
                                    <a href="@Url.Action("RemoveMember", new {id = @item.Id})" class="ajax-remove" data-name="@item.Name"><i class="icon-remove"></i>删除</a>
                                </td>
                                <td>
                                    <div class="text-center">
                                        <a href="javascript:void(0);" class="ajax-popup" data-url="@Url.Action("List", "OperateLog", new {area = "Core/System", sn = @item.Id})" data-title="【员工 @item.Name】操作记录" data-width="800" data-height="400"><i class="icon-list"></i>查看</a>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="pagination pagination-right">
                @Html.PagedListPager(
                    Model,
                    page => Url.Action(
                        "Index",
                        new RouteValueDictionary(new
                        {
                            page,
                            name
                        })),
                    CustomDisplayExtensions.PagedListRenderOptions)
            </div>
        </div>

        <br/>

        <div class="span12">
            <section>
                数据同步：&nbsp;
                <a href="#" class="btn" id="download"><i class="icon-refresh"></i>从微信同步</a>
                <a href="#" class="btn" id="upload"><i class="icon-refresh"></i>同步到微信</a>
                <a href="@Url.Action("RemoveNotExistMemberInWeixin")" class="ajax-remove btn" data-name="微信上本地不存在的员工"><i class="icon-remove"></i>删除微信上本地不存在的员工</a>
            </section>
        </div>
        <div>&nbsp;</div>
    </div>
</div>
    
<script>
    $(function () {
      $('#download').click(function () {
          var url = '@Url.Action("GetMembersFromWeixin")';
          var downloadUrl = '@Url.Action("DownloadMembersFromWeixin")';
          $.ajax({
              type: "POST",
              url: url,
              dataType: "json",
              success: function (resp) {
                  if (resp.Succeeded) {
                      var members = resp.Data.members;
                      var html = [];
                      html.push('微信上员工预览');
                      html.push('');
                      for (var i = 0; i < members.length; i++) {
                          var departments = [];
                          for (var j = 0; j < members[i].departments.length; j++) {
                              departments.push(members[i].departments[j].Name);
                          }
                          html.push(members[i].member.Name + ' 【' + departments.join(',') + '】');
                      }
                      html.push('');
                      html.push('只添加本地不存在的员工 或 根据员工编号更新已存在的员工');
                      html.push('请确认是否将微信上的员工【同步到本地员工】？');
                      confirm_modal_by_url(downloadUrl, '从微信同步员工', html.join('<br />'), "POST");
                  } else {
                      $.gritter.add({
                          title: '提示',
                          text: resp.ErrorMessage,
                          sticky: false
                      });
                  }
              }
          });
      });

      $('#upload').click(function () {
          var url = '@Url.Action("GetMembersFromWeixin")';
          var downloadUrl = '@Url.Action("UploadMembersToWeixin")';
          $.ajax({
              type: "POST",
              url: url,
              dataType: "json",
              success: function (resp) {
                  if (resp.Succeeded) {
                      var members = resp.Data.members;
                      var html = [];
                      html.push('微信上员工预览');
                      html.push('');
                      for (var i = 0; i < members.length; i++) {
                          var departments = [];
                          for (var j = 0; j < members[i].departments.length; j++) {
                              departments.push(members[i].departments[j].Name);
                          }
                          html.push(members[i].member.Name + ' 【' + departments.join(',') + '】');
                      }
                      html.push('');
                      html.push('只添加微信上不存在的员工 或 根据员工编号更新已存在的员工');
                      html.push('请确认是否将本地员工【同步到微信上】？');
                      confirm_modal_by_url(downloadUrl, '同步员工到微信', html.join('<br />'), "POST");
                  } else {
                      $.gritter.add({
                          title: '提示',
                          text: resp.ErrorMessage,
                          sticky: false
                      });
                  }
              }
          });
      });
  })
</script>