@using Ruico.Dto.Base
@using PagedList.Mvc
@using Ruico.WebHost
@model PagedList.IPagedList<Ruico.Dto.Base.CargoDTO>
    @{
        ViewBag.Title = "货品管理";
        var name = ViewBag.Name;
        var categories = ViewBag.Categories as List<CategoryDTO> ?? new List<CategoryDTO>();
        var categoryId = ViewBag.CategoryId as string;
        var categoryItems = categories.Select(x =>
            new SelectListItem() { Text = x.Name, Value = x.Id.ToString(), Selected = categoryId == x.Id.ToString() }).ToList();
        categoryItems.Insert(0, new SelectListItem() { Text = "类型", Value = "" });
    }

    <div id="content-header">
        <h1>货品管理</h1>
    </div>
    <div id="breadcrumb">
        <a href="@Url.Action("Index", "Home", new { area = "" }, null)" title="返回首页" class="tip-bottom"><i class="icon-home"></i> 首页</a>
        <a href="@Url.Action("Index")">货品管理</a>

    </div>
    <div class="container-fluid">

        <div class="row-fluid">
            <div class="span12">
                @using (Ajax.BeginForm("SearchCargo", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "ajaxRequestSuccess" }, new { @class = "form-inline" }))
                {
                    <section>
                        <input type="text" name="name" id="name" class="input-medium" placeholder="货品名称" value="@name">&nbsp; &nbsp;
                        @Html.DropDownList("categoryId", categoryItems, new { placeholder = "类型", @class = "input-medium" })
                        <button type="submit" class="btn btn-primary">查询</button>&nbsp; &nbsp;
                        <a href="@Url.Action("EditCargo")" class="btn btn-success" id="addnew">新增货品</a>
                    </section>
                }
                <div class="widget-box">
                    <div class="widget-content nopadding">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>货品编码</th>
                                    <th>货品名称</th>
                                    <th>类型</th>
                                    <th>创建日期</th>
                                    <th>操作</th>
                                    <th>操作日志</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Sn</td>
                                        <td>@item.Name</td>
                                        <td>@Html.Raw(@item.Category != null ? @item.Category.Name : string.Empty)</td>
                                        <td>@item.Created.Display()</td>
                                        <td>
                                            <a href="@Url.Action("EditCargo", new { id = @item.Id })"><i class="icon-edit"></i>编辑</a>
                                            <a href="@Url.Action("RemoveCargo", new { id = @item.Id })" class="ajax-remove" data-name="@item.Name"><i class="icon-remove"></i>删除</a>
                                        </td>
                                        <td>
                                            <div class="text-center">
                                                <a href="javascript:void(0);" class="ajax-popup" data-url="@Url.Action("List", "OperateLog", new { area = "Core/System", sn = @item.Sn })" data-title="【货品 @item.Name】操作记录" data-width="800" data-height="400"><i class="icon-list"></i>查看</a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="pagination pagination-right">
                    @Html.PagedListPager(
                        Model,
                        page => Url.Action(
                            "Index",
                            new RouteValueDictionary(new
                            {
                                page,
                                name
                            })),
                            CustomDisplayExtensions.PagedListRenderOptions)
                </div>
            </div>
        </div>
    </div>