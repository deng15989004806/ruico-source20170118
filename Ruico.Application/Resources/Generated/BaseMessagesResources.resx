<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category" xml:space="preserve">
    <value><![CDATA[类型]]></value>
  </data>
  <data name="Parent_Category" xml:space="preserve">
    <value><![CDATA[父级类型]]></value>
  </data>
  <data name="Child_SerialNumberRule_Prefix" xml:space="preserve">
    <value><![CDATA[子级编码规则前缀]]></value>
  </data>
  <data name="Child_SerialNumberRule_NumberLength" xml:space="preserve">
    <value><![CDATA[子级编码规则流水号位数]]></value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value><![CDATA[联系人]]></value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value><![CDATA[电话]]></value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value><![CDATA[传真]]></value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value><![CDATA[手机号]]></value>
  </data>
  <data name="Address" xml:space="preserve">
    <value><![CDATA[地址]]></value>
  </data>
  <data name="Postcode" xml:space="preserve">
    <value><![CDATA[邮编]]></value>
  </data>
  <data name="Email" xml:space="preserve">
    <value><![CDATA[邮箱]]></value>
  </data>
  <data name="Add_Cargo" xml:space="preserve">
    <value><![CDATA[添加货品]]></value>
  </data>
  <data name="Update_Cargo" xml:space="preserve">
    <value><![CDATA[更新货品]]></value>
  </data>
  <data name="Remove_Cargo" xml:space="preserve">
    <value><![CDATA[删除货品]]></value>
  </data>
  <data name="Cargo_Exists_WithValue" xml:space="preserve">
    <value><![CDATA[货品'{0}'已存在]]></value>
  </data>
  <data name="Cargo_NotExists" xml:space="preserve">
    <value><![CDATA[货品不存在]]></value>
  </data>
  <data name="Add_Category" xml:space="preserve">
    <value><![CDATA[添加类型]]></value>
  </data>
  <data name="Update_Category" xml:space="preserve">
    <value><![CDATA[更新类型]]></value>
  </data>
  <data name="Remove_Category" xml:space="preserve">
    <value><![CDATA[删除类型]]></value>
  </data>
  <data name="Category_Exists_WithValue" xml:space="preserve">
    <value><![CDATA[类型'{0}'已存在]]></value>
  </data>
  <data name="Category_NotExists" xml:space="preserve">
    <value><![CDATA[类型不存在]]></value>
  </data>
  <data name="Category_Parent_SerialNumberRule_Prefix_Empty" xml:space="preserve">
    <value><![CDATA[父级编码规则，前缀不能为空]]></value>
  </data>
  <data name="Category_Parent_SerialNumberRule_NumberLength_NotGreat_Than_Zero" xml:space="preserve">
    <value><![CDATA[父级编码规则，流水号位数必须大于0]]></value>
  </data>
  <data name="Add_SerialNumberRule" xml:space="preserve">
    <value><![CDATA[添加编码规则]]></value>
  </data>
  <data name="Update_SerialNumberRule" xml:space="preserve">
    <value><![CDATA[更新编码规则]]></value>
  </data>
  <data name="Remove_SerialNumberRule" xml:space="preserve">
    <value><![CDATA[删除编码规则]]></value>
  </data>
  <data name="SerialNumberRule_Exists" xml:space="preserve">
    <value><![CDATA[编码规则'{0}'已存在]]></value>
  </data>
  <data name="SerialNumberRule_NotExists" xml:space="preserve">
    <value><![CDATA[编码规则不存在]]></value>
  </data>
  <data name="NumberLength_NotGreat_Than_Zero" xml:space="preserve">
    <value><![CDATA[流水号位数必须大于0]]></value>
  </data>
  <data name="SerialNumberRule_Prefix" xml:space="preserve">
    <value><![CDATA[编码规则前缀]]></value>
  </data>
  <data name="SerialNumberRule_UseDateNumber" xml:space="preserve">
    <value><![CDATA[是否使用日期]]></value>
  </data>
  <data name="SerialNumberRule_NumberLength" xml:space="preserve">
    <value><![CDATA[编码规则流水号位数]]></value>
  </data>
  <data name="SerialNumberRule_NotExists_WithValue" xml:space="preserve">
    <value><![CDATA[编码规则'{0}'不存在]]></value>
  </data>
  <data name="Add_Ship" xml:space="preserve">
    <value><![CDATA[添加船舶]]></value>
  </data>
  <data name="Update_Ship" xml:space="preserve">
    <value><![CDATA[更新船舶]]></value>
  </data>
  <data name="Remove_Ship" xml:space="preserve">
    <value><![CDATA[删除船舶]]></value>
  </data>
  <data name="Ship_Exists_WithValue" xml:space="preserve">
    <value><![CDATA[船舶'{0}'已存在]]></value>
  </data>
  <data name="Ship_NotExists" xml:space="preserve">
    <value><![CDATA[船舶不存在]]></value>
  </data>
  <data name="Add_Company" xml:space="preserve">
    <value><![CDATA[添加公司]]></value>
  </data>
  <data name="Update_Company" xml:space="preserve">
    <value><![CDATA[更新公司]]></value>
  </data>
  <data name="Remove_Company" xml:space="preserve">
    <value><![CDATA[删除公司]]></value>
  </data>
  <data name="Company_Exists_WithValue" xml:space="preserve">
    <value><![CDATA[公司'{0}'已存在]]></value>
  </data>
  <data name="Company_NotExists" xml:space="preserve">
    <value><![CDATA[公司不存在]]></value>
  </data>
</root>
